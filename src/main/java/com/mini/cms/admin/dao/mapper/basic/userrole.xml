<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper    PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"    "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">
<mapper namespace="com.mini.cms.admin.dao.mapper.basic.UserRoleDao">
	<cache/>
	<insert id="insert" parameterType="com.mini.cms.admin.dao.entity.basic.UserRoleEty">
		insert into userrole(
			id,userId,roleId)
		values (
			#{id},#{userId},#{roleId}
		)
	</insert>

	<select id="selectByEntity" parameterType="com.mini.cms.admin.dao.entity.basic.UserRoleEty" resultType="com.mini.cms.admin.dao.entity.basic.UserRoleEty">
		SELECT * from userrole
		WHERE 1=1 
		<if test="id != null "> AND id=#{id}</if>
		<if test="userId != null "> AND userId=#{userId}</if>
		<if test="roleId != null "> AND roleId=#{roleId}</if>
	</select>

	<update id="updateById" parameterType="com.mini.cms.admin.dao.entity.basic.UserRoleEty">
		UPDATE userrole SET
		<if test="id != null">id=#{id},</if>
		<if test="userId != null">userId=#{userId},</if>
		<if test="roleId != null">roleId=#{roleId},</if>
		 id=#{id}
		WHERE
		 id=#{id}
	</update>

	<select id="selectById" parameterType="int" resultType="com.mini.cms.admin.dao.entity.basic.UserRoleEty">
		select * from userrole where id=#{id}
	</select>

	<delete id="deleteById" parameterType="int">
		DELETE FROM userrole WHERE id=#{id}
	</delete>

	<select id="selectLimitCount" parameterType="com.mini.cms.admin.dao.entity.basic.UserRoleEty" resultType="java.lang.Integer">
		SELECT count(1) from userrole
		WHERE 1=1 
		<if test="id != null "> AND id=#{id}</if>
		<if test="userId != null "> AND userId=#{userId}</if>
		<if test="roleId != null "> AND roleId=#{roleId}</if>
	</select>

	<select id="selectByLimit" parameterType="com.mini.cms.admin.dao.entity.basic.UserRoleEty" resultType="com.mini.cms.admin.dao.entity.basic.UserRoleEty">
		SELECT * from userrole
		WHERE 1=1 
		<if test="id != null "> AND id=#{id}</if>
		<if test="userId != null "> AND userId=#{userId}</if>
		<if test="roleId != null "> AND roleId=#{roleId}</if>
		<if test="extLimitSort != null">order by ${extLimitSort} ${extLimitDir}</if>
		<if test="extLimitLimit != null"> limit ${extLimitStart}, ${extLimitLimit}</if>
	</select>
</mapper>